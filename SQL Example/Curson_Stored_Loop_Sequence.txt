   DROP TABLE Stored_Test; 

  CREATE TABLE Stored_Test
  (
  ID NUMBER(6) PRIMARY KEY,
  Mark NUMBER(8),
  Name VARCHAR2(10),
  Story VARCHAR2(10)
  );

  INSERT INTO Stored_Test
    VALUES(10,71,'pqr','B');

  SELECT * FROM Stored_Test;

   CREATE TABLE Stored_Test2
   AS SELECT * FROM Stored_Test;
 
   CREATE TABLE Stored_Test3
   AS SELECT * FROM Stored_Test;

   AlTER TABLE Stored_Test3
      ADD (Z NUMBER(8));
   
  SELECT * FROM Stored_Test3;
  SELECT * FROM Stored_Test;

  UPDATE  Stored_Test3
   SET  Stored_Test3.Z= Stored_Test.ID
   WHERE Stored_Test.ID =  Stored_Test3.ID;

  CREATE TABLE Stored_Test_Loop_Update
   AS SELECT * FROM Stored_Test3;

  UPDATE Stored_Test_Loop_Update
    SET Z=10;

   SELECT * FROM Stored_Test_Loop_Update;


/* PL/SQL Example */

  DECLARE
     n INT:=0;
  
  BEGIN
     FOR n IN 1..10 LOOP
        UPDATE Stored_Test_Loop_Update
          SET Z=n
          WHERE ID=n;
        END LOOP;
  END;
  SELECT * FROM Stored_Test_Loop_Update;

/* PL/SQL Example */

  DECLARE
     n INT:=0;
     m INT:=1;
  
  BEGIN
     FOR n IN 1..10 LOOP
        UPDATE Stored_Test_Loop_Update
          SET Z=m
          WHERE ID=n;
          m:=m+1;
        END LOOP;
  END;
  SELECT * FROM Stored_Test_Loop_Update;
  SELECT * FROM Stored_Test2;
  
  /* single-row subquery returns more than one row
      UPDATE Stored_Test_Loop_Update
      SET Stored_Test_Loop_Update.Z= (SELECT Stored_Test2.ID
           FROM Stored_Test2, Stored_Test_Loop_Update
           WHERE Stored_Test2.ID=Stored_Test_Loop_Update.ID); */



     SELECT * FROM TAB;


    SELECT Seq_Test.NEXTVAL FROM DUAL;
    
    SELECT Seq_Test.CURRVAL FROM DUAL;